{
 "Resources": {
  "PreSignupFunctionServiceRole5334302F": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CognitoKakaoStack/PreSignupFunction/ServiceRole/Resource"
   }
  },
  "PreSignupFunction4F2ED1FA": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "aed3257e292417c4a8e903c64a041ae0811e0f597d917763c036d7af29d1d341.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "PreSignupFunctionServiceRole5334302F",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "KakaoAuthPreSignupTrigger",
    "Handler": "index.handler",
    "MemorySize": 128,
    "Runtime": "nodejs16.x",
    "Timeout": 5
   },
   "DependsOn": [
    "PreSignupFunctionServiceRole5334302F"
   ],
   "Metadata": {
    "aws:cdk:path": "CognitoKakaoStack/PreSignupFunction/Resource",
    "aws:asset:path": "/home/ec2-user/environment/fmk-user-service",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "PreSignupFunctionPreSignUpCognito8EE3D4C3": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "PreSignupFunction4F2ED1FA",
      "Arn"
     ]
    },
    "Principal": "cognito-idp.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "UserPool6BA7E5F2",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CognitoKakaoStack/PreSignupFunction/PreSignUpCognito"
   }
  },
  "PostConfirmationFunctionServiceRoleE856FC83": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CognitoKakaoStack/PostConfirmationFunction/ServiceRole/Resource"
   }
  },
  "PostConfirmationFunction3DFFAE63": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "77ab50769b094a010267337b702563148d1311bbf5302528cb6f829170a70756.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "PostConfirmationFunctionServiceRoleE856FC83",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "KakaoAuthPostConfirmTrigger",
    "Handler": "index.handler",
    "MemorySize": 128,
    "Runtime": "nodejs16.x",
    "Timeout": 5
   },
   "DependsOn": [
    "PostConfirmationFunctionServiceRoleE856FC83"
   ],
   "Metadata": {
    "aws:cdk:path": "CognitoKakaoStack/PostConfirmationFunction/Resource",
    "aws:asset:path": "/home/ec2-user/environment/fmk-user-service",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "PostConfirmationFunctionPostConfirmationCognito91790399": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "PostConfirmationFunction3DFFAE63",
      "Arn"
     ]
    },
    "Principal": "cognito-idp.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "UserPool6BA7E5F2",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CognitoKakaoStack/PostConfirmationFunction/PostConfirmationCognito"
   }
  },
  "PreAuthenticationFunctionServiceRole7AB42D7C": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CognitoKakaoStack/PreAuthenticationFunction/ServiceRole/Resource"
   }
  },
  "PreAuthenticationFunctionFCD4794F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "836f68d3e7b3fbf55bb68597719a0aff60ec65feb3f90481fce3f08b7b5a352d.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "PreAuthenticationFunctionServiceRole7AB42D7C",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "KakaoAuthPreAuthenticationTrigger",
    "Handler": "index.handler",
    "MemorySize": 128,
    "Runtime": "nodejs16.x",
    "Timeout": 5
   },
   "DependsOn": [
    "PreAuthenticationFunctionServiceRole7AB42D7C"
   ],
   "Metadata": {
    "aws:cdk:path": "CognitoKakaoStack/PreAuthenticationFunction/Resource",
    "aws:asset:path": "/home/ec2-user/environment/fmk-user-service",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "PreAuthenticationFunctionPreAuthenticationCognito5CF4D031": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "PreAuthenticationFunctionFCD4794F",
      "Arn"
     ]
    },
    "Principal": "cognito-idp.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "UserPool6BA7E5F2",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CognitoKakaoStack/PreAuthenticationFunction/PreAuthenticationCognito"
   }
  },
  "UserPool6BA7E5F2": {
   "Type": "AWS::Cognito::UserPool",
   "Properties": {
    "AccountRecoverySetting": {
     "RecoveryMechanisms": [
      {
       "Name": "verified_email",
       "Priority": 1
      }
     ]
    },
    "AdminCreateUserConfig": {
     "AllowAdminCreateUserOnly": false
    },
    "AutoVerifiedAttributes": [
     "email"
    ],
    "EmailVerificationMessage": "The verification code to your new account is {####}",
    "EmailVerificationSubject": "Verify your new account",
    "LambdaConfig": {
     "PostConfirmation": {
      "Fn::GetAtt": [
       "PostConfirmationFunction3DFFAE63",
       "Arn"
      ]
     },
     "PreAuthentication": {
      "Fn::GetAtt": [
       "PreAuthenticationFunctionFCD4794F",
       "Arn"
      ]
     },
     "PreSignUp": {
      "Fn::GetAtt": [
       "PreSignupFunction4F2ED1FA",
       "Arn"
      ]
     }
    },
    "Policies": {
     "PasswordPolicy": {
      "MinimumLength": 8,
      "RequireLowercase": true,
      "RequireNumbers": true,
      "RequireSymbols": false,
      "RequireUppercase": false
     }
    },
    "Schema": [
     {
      "Mutable": true,
      "Name": "email",
      "Required": true
     },
     {
      "AttributeDataType": "String",
      "Mutable": true,
      "Name": "provider"
     }
    ],
    "SmsVerificationMessage": "The verification code to your new account is {####}",
    "UsernameAttributes": [
     "email"
    ],
    "UserPoolName": "KakaoAuthUserPool",
    "VerificationMessageTemplate": {
     "DefaultEmailOption": "CONFIRM_WITH_CODE",
     "EmailMessage": "The verification code to your new account is {####}",
     "EmailSubject": "Verify your new account",
     "SmsMessage": "The verification code to your new account is {####}"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "CognitoKakaoStack/UserPool/Resource"
   }
  },
  "UserPoolDomain5479B217": {
   "Type": "AWS::Cognito::UserPoolDomain",
   "Properties": {
    "Domain": {
     "Fn::Join": [
      "",
      [
       "kakaoauth",
       {
        "Ref": "AWS::AccountId"
       }
      ]
     ]
    },
    "UserPoolId": {
     "Ref": "UserPool6BA7E5F2"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CognitoKakaoStack/UserPoolDomain/Resource"
   }
  },
  "UserPoolClient2F5918F7": {
   "Type": "AWS::Cognito::UserPoolClient",
   "Properties": {
    "UserPoolId": {
     "Ref": "UserPool6BA7E5F2"
    },
    "AllowedOAuthFlows": [
     "implicit"
    ],
    "AllowedOAuthFlowsUserPoolClient": true,
    "AllowedOAuthScopes": [
     "email",
     "profile",
     "openid"
    ],
    "CallbackURLs": [
     "http://localhost:3000"
    ],
    "ClientName": "KakaoAuthUserPoolClient",
    "ExplicitAuthFlows": [
     "ALLOW_ADMIN_USER_PASSWORD_AUTH",
     "ALLOW_USER_SRP_AUTH",
     "ALLOW_REFRESH_TOKEN_AUTH"
    ],
    "PreventUserExistenceErrors": "ENABLED",
    "SupportedIdentityProviders": [
     "COGNITO"
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CognitoKakaoStack/UserPoolClient/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/01PTU/DMAz9Lbunhg6BuLJOHNE0xLnKUlO5TWypTuEQ9b+Tpmza6X34yXpvD/tXeNzZX61cN1aeLpA+o3WjyVabvA2XzrYsHQ4KHwXeZ3aRhA3ZAOksHk3zzSsuRp9aq4pR4W2FrOEwuxHjwSqa7RukHL89yfyEUyDVrBbjpGeKAulLcTqJ+DVw41dylGCJ70//zlU2npDjfWBzlsWUYnliT9yX4qgyT66MaIQ7iqXIOhkGffipX6B+hno3KFE1zRwpIJw3/APUqEcBPgEAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "CognitoKakaoStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Outputs": {
  "ExportsOutputRefUserPoolClient2F5918F753847A55": {
   "Value": {
    "Ref": "UserPoolClient2F5918F7"
   },
   "Export": {
    "Name": "CognitoKakaoStack:ExportsOutputRefUserPoolClient2F5918F753847A55"
   }
  },
  "ExportsOutputRefUserPool6BA7E5F296FD7236": {
   "Value": {
    "Ref": "UserPool6BA7E5F2"
   },
   "Export": {
    "Name": "CognitoKakaoStack:ExportsOutputRefUserPool6BA7E5F296FD7236"
   }
  },
  "ExportsOutputFnGetAttUserPool6BA7E5F2Arn686ACC00": {
   "Value": {
    "Fn::GetAtt": [
     "UserPool6BA7E5F2",
     "Arn"
    ]
   },
   "Export": {
    "Name": "CognitoKakaoStack:ExportsOutputFnGetAttUserPool6BA7E5F2Arn686ACC00"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}